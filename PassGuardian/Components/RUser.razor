  
<EditForm Model="user" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <div class="modal fade show" role="dialog" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true">
        <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable p-0">
            <div class="modal-content modalHeight p-2" style="width:100%;">
                <div class="modal-header">
                    <span class="fs-4 fw-bold">Register</span>
                    <button type="button" class="btn-close" @onclick="() => Close(false)" data-bs-dismiss="modal" aria-label="Close" />
                </div>
                <div class="modal-body m-0 p-0">

                    <div class="form-group">
                        <label>User Name</label>
                        <input class="form-control" @bind="user.UserName" />
                        <ValidationMessage For="(() => user.UserName)" />
                    </div>

                    <div class="form-group">
                        <label>Email</label>
                        <input class="form-control" @bind="user.Email" />
                        <ValidationMessage For="(() => user.Email)" />
                    </div>

                    <div class="form-group">
                        <label>Password</label>
                        <input type="password" class="form-control" @bind="user.Password" />
                        <ValidationMessage For="(() => user.Password)" />
                    </div>

                    <div class="form-group">
                        <label>Confirm Password</label>
                        <input type="password" class="form-control" @bind="user.ConfirmPassword" />
                        <ValidationMessage For="(() => user.ConfirmPassword)" />
                    </div>
                    @if (alert)
                    {
                        <div class="mt-2">
                            <Alert TypeMessage="@typeMessage" Message="@message" />

                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <div class="align-items-center">
                        <button type="submit" class="btn btn-success">Register</button>
                        <button type="button" class="btn btn-danger" @onclick="(() =>{Close(false);})">Cancel</button>

                    </div>
                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    UserBLL userBLL;
    User user;
    bool alert = false;
    string message = "";
    int typeMessage = -1;

    protected override void OnInitialized()
    {
        user = new();
        userBLL = new UserBLL();
    }

    private async Task Save()
    {
        if (await userBLL.Save(user))
        {
            CleanUp();
            typeMessage = 0;
            message = "Ready";
            alert = true;
        }
        else
        {
            typeMessage = 1;
            foreach (var item in userBLL.Response.Responses)
            {
                message += $"{item.Key}\n{item.Value}\n";
            }
            alert = true;
        }
    }

    private void CleanUp()
    {
        user = new();
    }

    private Task Close(bool refrescar)
    {
        return OnClose.InvokeAsync(refrescar);
    }
}
